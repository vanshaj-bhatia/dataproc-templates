# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# gs://temp_dpt_binaries/2024-04-03_feature-cicd-improvements/java/dataproc-templates-1.0-SNAPSHOT.jar

steps:
- id: test bash
  name: gcr.io/cloud-builders/gcloud
  entrypoint: 'bash'
  args: 
    - "-c"
    - |
      #!/usr/bin/env bash

      apt-get update && apt-get install -y jq
      
      JENKINS_URL=https://dataproctemplatesci.com/job/dataproc-templates-build/job/temp-builds/job/cloudbuild-trigger-test-job/build?token=CLOUDBUILD_TOKEN
      CREDS=admin:yadavaja-sandbox

      BUILD_URL=$(curl -i -s -u $$CREDS $$JENKINS_URL | grep "location" | awk '{printf $$2}' | tr -d '\r')
      if [[ $$? != 0 ]]; then
        echo "API request failed. Please check the Jenkins URL and API token."
        exit 1
      fi

      JOB_URL=$${BUILD_URL}api/json

      echo "Build Job Queue URL received on Jenkins trigger: $$JOB_URL"
      EXECUTABLE_URL=$(curl -s -u $$CREDS $$JOB_URL | jq -r '.executable.url')
      if [[ $$? != 0 ]]; then
          echo "API request failed. Please check the Jenkins URL and API token."
          exit 1
      fi           
        echo "Executable URL received on the first attempt: [$$EXECUTABLE_URL]"
        while [[ "$$EXECUTABLE_URL" == null ]]; do
          EXECUTABLE_URL=$(curl -s -u $$CREDS $$JOB_URL | jq -r '.executable.url')
          if [[ $$? != 0 ]]; then
            echo "API request failed. Please check the Jenkins URL and API token."
            exit 1
          fi          
        done
      POLLING_URL=$${EXECUTABLE_URL}api/json


      echo "Executable URL to be polled for the triggered Jenkins job: $$POLLING_URL"
        status="UNKNOWN"
        while [[ $$status != "SUCCESS" ]]; do
          sleep 1
          status=$(curl -s -u $$CREDS $$POLLING_URL | jq -r '.result')
          if [[ $$? != 0 ]]; then
            echo "JSON data could not be parsed. Exiting..."
            exit 1
          fi
          echo "Result Polled on Job Executable URL: [$status]"            
          [ "$$status" == null  ] && continue
          if [[ $$status == "FAILURE" || $$status == "NOT_BUILT" || $$status == "ABORTED" || $$status == "UNSTABLE" ]]; then
            echo "Jenkins job $$JOB_NAME with Build URL $$JOB_URL completed with status [$$status]"
            exit 99
          fi
        done
        echo "Jenkins job $$JOB_NAME with Build URL $$JOB_URL completed with status $$status"